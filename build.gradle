buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.22.0'
        constraints {
            classpath("org.apache.logging.log4j:log4j-core") {
                version {
                    strictly("[2.18, 3[")
                    prefer("2.18.0")
                }
                because("CVE-2021-44228, CVE-2021-45046, CVE-2021-45105: Log4j vulnerable to remote code execution and other critical security vulnerabilities")
            }
        }
    }
}

apply plugin: 'java-library'
apply plugin: 'com.vanniktech.maven.publish'

configure(subprojects) {
    apply plugin: 'java-library'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'com.vanniktech.maven.publish'
    compileJava {
        options.incremental = true
    }
}

sourceCompatibility = 1.8

def projectName = 'kryo-more'

group 'com.github.tommyettinger'

version "$VERSION_NAME"

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

subprojects {
    group = parent.group
    ext.projectName = 'kryo-more'
    repositories {
        // mavenLocal()
        mavenCentral()
        maven { url 'https://s01.oss.sonatype.org' }
        google()
        gradlePluginPortal()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://jitpack.io' }
    }
}

// Disable JDK 8's doclint
// http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            // The -quiet is because of some sort of weird JDK JavaCompiler bug:
            // https://discuss.gradle.org/t/passing-arguments-to-compiler-and-javadoc/1661
            options.addStringOption('Xdoclint:none,-missing', '-quiet')
            options.tags('apiNote:a:"API Note"', 'implSpec:a:"Implementation Requirements"', 'implNote:a:"Implementation Note"')
        }
    }
}

if(JavaVersion.current().isJava9Compatible()) {
    allprojects {
        tasks.withType(JavaCompile) {
            options.release.set(8) // LWJGL3 needs Java 8 starting in libGDX 1.11.0, which forces tests to use Java 8 or higher.
        }
    }
}

repositories {
    // You can uncomment mavenLocal() if you need self-built versions, but it can be a problem with GWT or other sources dependencies.
    //mavenLocal()
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    google()
    gradlePluginPortal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
}
